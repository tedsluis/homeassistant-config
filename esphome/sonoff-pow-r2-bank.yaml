# device specific settings
substitutions:
  device_name: sonoffpowr2bank
  friendly_name: Sonoff Pow R2 bank
  device_ip: 192.168.11.118

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}

esp8266:
  board: esp01_1m

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  - platform: esphome 
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${device_ip}
    gateway: 192.168.11.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: '${device_name}_Fallback_Hotspot'
    password: !secret wifi_password

captive_portal:

web_server:
  port: 80
  auth:
    username: admin
    password: !secret webserver_password

# https://esphome.io/components/sensor/cse7766

# https://esphome.io/devices/sonoff#sonoff-pow-r2
# GPIO0 Button (inverted)
# GPIO12 Relay and Red LED
# GPIO13 Blue LED (inverted)

uart:
  rx_pin: RX
  baud_rate: 4800
  parity: EVEN

# get sensor measurements
sensor:
  - platform: wifi_signal
    name: '${device_name}_wifi_signal'
    update_interval: 60s
  - platform: uptime
    name: '${device_name}_uptime'
  - platform: cse7766
    current:
      name: '${device_name}_current'
      filters:
        - throttle_average: 10s
    voltage:
      name: '${device_name}_voltage'
      filters:
        - throttle_average: 10s
    power:
      name: '${device_name}_power'
      filters:
        - throttle_average: 10s
      id: power
      on_value_range:
        - above: 2.0
          then:
            - light.turn_on: led
        - below: 1.0
          then:
            - light.turn_off: led
    energy:
      name: '${device_name}_energy'
      filters:
        - throttle_average: 10s

# switch relay
switch:
  - platform: template
    name: '${device_name}_switch'
    optimistic: true
    id: fakebutton
    restore_mode: ALWAYS_ON
    turn_on_action:
    - switch.turn_on: relay
    - light.turn_on: led
    turn_off_action:
    - switch.turn_off: relay
    - light.turn_off: led
  - platform: gpio
    id: relay
    pin: GPIO12
    restore_mode: ALWAYS_ON

# set blue led state
output:
  - platform: esp8266_pwm
    id: pow_blue_led
    pin:
      number: GPIO13
      inverted: True

# blue led state
light:
  - platform: monochromatic
    name: '${device_name}_bue_led'
    output: pow_blue_led
    id: led

# toggle button & state
binary_sensor:
  - platform: gpio
    name: '${device_name}_button'
    id: button
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: fakebutton

# firmware version
text_sensor:
  - platform: version
    name: '${device_name}_version'