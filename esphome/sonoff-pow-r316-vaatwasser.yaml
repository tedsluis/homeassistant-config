# Basic Config
substitutions:
  device_name: sonoff-pow-r316-vaatwasser
  friendly_name: Sonoff Pow R316 vaatwasser
  device_ip: 192.168.11.193
  update_interval: 10s

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}

esp32:
  board: nodemcu-32s

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${device_ip}
    gateway: 192.168.11.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: '${device_ip}_Fallback_Hotspot'
    password: !secret wifi_password

captive_portal:

web_server:
  port: 80
  auth:
    username: admin
    password: !secret webserver_password
 
uart:
  - rx_pin: GPIO3
    baud_rate: 4800
    id: dummy_uart  # Will end up being assigned UART0
  - rx_pin: GPIO16
    baud_rate: 4800
    id: active_uart  # Will end up being assigned UART1

time:
  - platform: homeassistant
    id: homeassistant_time
  
sensor:
  - platform: cse7766
    uart_id: active_uart # Select power meter's UART
    current:
      name: ${friendly_name}_current
      id: a_sensor
      filters:
        - throttle_average: ${update_interval}
    voltage:
      name: ${friendly_name}_voltage
      id: v_sensor
      filters:
        - throttle_average: ${update_interval}
    power:
      name: ${friendly_name}_power
      id: w_sensor
      filters:
        - throttle_average: ${update_interval}
      on_value_range:
        - above: 2.0
          then:
            - light.turn_on: switch_led
        - below: 1.0
          then:
            - light.turn_off: switch_led
    energy:
      filters:
        - throttle_average: ${update_interval}
      name: ${friendly_name}_energy
      id: wh_sensor
  - platform: wifi_signal
    name: '${device_name}_wifi_signal'
    update_interval: 60s
  - platform: uptime
    name: '${device_name}_uptime'

text_sensor:
  - platform: version
    name: '${device_name}_version'
  - platform: wifi_info
    ip_address:
      name: ${device_ip}
    ssid:
      name: !secret wifi_ssid
    bssid:
      name: !secret wifi_ssid

output:
  - platform: ledc
    id: led
    pin:
      number: GPIO18
      inverted: True

light:
  - platform: monochromatic
    id: switch_led
    output: led
    internal: True
  - platform: status_led
    id: wifi_status_led
    internal: True
    pin:
      number: GPIO05
      inverted: True

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
    name: "${device_name} - Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "${device_name} Status"

switch:
  - platform: gpio
    name: "${device_name} - Relay Switch"
    pin: GPIO13
    id: relay
    restore_mode: ALWAYS_ON
  - platform: restart
    name: "${device_name} Restart"
    